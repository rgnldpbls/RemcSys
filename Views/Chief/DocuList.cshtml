@model Tuple<IEnumerable<FileRequirement>, IEnumerable<FundedResearchEthics>>
@{
    ViewData["Title"] = "Application Requirements";

    Layout = "_NavChief1";
}

<div class="document-management-container">
    <p>
        <form asp-action="SetDTS" method="post">
            <div class="dts-container mb-4">
                <label for="dtsNumber">DTS No.:</label>
                <input type="text" id="dtsNumber" name="DTSNo" class="form-control dts-input" placeholder="Type here..."
                       value="@ViewBag.DTSNo" />
                <button type="submit" class="dts_edit-button"><i class="bi bi-pencil"></i></button>
                <input type="hidden" name="fraId" value="@ViewBag.FraId" />
            </div>
        </form>
    </p>
    <h3><b>RESEARCH TITLE:</b> @ViewBag.Research</h3>
    <p><b>Field of Study:</b> @ViewBag.Field</p>
    <p><b>Proponents:</b><br />  @ViewBag.Lead 
        @if (!ViewBag.Member.Contains("N/A"))

        {
            @foreach (var member in ViewBag.Member)

            {
                <br />
                @member
            }
        }
    </p>
    <table class="document-table">
        <thead>
            <tr>
                <th>Document Title</th>
                <th>File Uploaded</th>
                <th>
                    Status
                    <button class="status-button"><i class="bi bi-question-circle-fill"></i></button>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model.Item1)
            {
                <tr>
                    <td>
                        @item.file_Name
                    </td>
                    <td>
                        @item.file_Uploaded.ToString("MMMM d, yyyy")
                    </td>
                    <td>
                        <div class="dropdown-container">
                            <select class="form-control custom-select status-dropdown" data-row-id="@item.fr_Id" onchange="handleStatusChange(this)"
                            @if (@item.file_Status == "Checked")
                            {
                                <text>disabled</text>
                            }>
                                <option value="@item.file_Status" disabled selected>@item.file_Status</option>
                                <option value="Pending">Pending</option>
                                <option value="Compliance">For Compliance</option>
                                <option value="Checked">Checked</option>
                            </select>
                            <i class="arrow-down"></i>
                        </div>
                    </td>
                    <td class="action-buttons">
                        <a href="@Url.Action("PreviewFile", new {id = item.fr_Id})" target="_blank"><i class="bi bi-eye-fill" style="color:#000; font-size: 30px;"></i></a>
                        <button class="comment-btn" id="comment-@item.fr_Id" style="display: none; font-size: 28px;" data-row-id="@item.fr_Id"><i class="bi bi-chat-left-fill"></i></button>
                    </td>
                </tr>
            }
            @if(Model.Item2 != null && Model.Item2.Any())
            {
                @foreach(var researchEthics in Model.Item2)
                {
                    <td>@researchEthics.file_Name</td>
                    <td>@researchEthics.file_Uploaded.ToString("MMMM d, yyyy")</td>
                    <td>
                        <div class="dropdown-container">
                            <select class="form-control custom-select status-dropdown" data-row-id="@researchEthics.fre_Id" onchange="handleStatusChange(this)"
                            @if (researchEthics.file_Status == "Checked")
                            {
                                <text>disabled</text>
                            }>
                                <option value="@researchEthics.file_Status" disabled selected>@researchEthics.file_Status</option>
                                <option value="Pending">Pending</option>
                                <option value="Compliance">For Compliance</option>
                                <option value="Checked">Checked</option>
                            </select>
                            <i class="arrow-down"></i>
                        </div>
                    </td>
                    <td class="action-buttons">
                        <a href="@Url.Action("PreviewFile", new {id = researchEthics.fre_Id})" target="_blank"><i class="bi bi-eye-fill" style="color:#000; font-size: 30px;"></i></a>
                        <button class="comment-btn" id="comment-@researchEthics.fre_Id" style="display: none; font-size: 28px;" data-row-id="@researchEthics.fre_Id"><i class="bi bi-chat-left-fill"></i></button>
                    </td>
                }
            }
        </tbody>
    </table>
</div>

<!--feedback pop-up-->
<div class="feedback" id="feedbackPopup" style="display: none;">
    <div class="card1">
        <button type="button" class="fdismiss" id="closePopupBtn">×</button>
        <span class="title">Feedback</span>
        <textarea class="card2" id="feedback" placeholder="Enter your feedback here..."></textarea>
        <button type="button" class="send-btn" id="sendFeedbackBtn">Send</button>
    </div>
</div>

<!--status-tag pop-up-->
<div class="status_tag">
    <div class="card3">
        <button type="button" class="sdismiss">×</button>
        <span class="title">Status Tags</span>
        <div class="card4">
            <ol>
                <li>
                    <span class="sstatus pending">Pending</span>
                    <p>- For Validation</p>
                </li>
                <li>
                    <span class="sstatus compliance">For Compliance</span>
                    <p>- Return for resubmission of requirements.</p>
                </li>
                <li>
                    <span class="sstatus approved">Checked</span>
                    <p>- The document has been checked by the Chief.</p>
                </li>
            </ol>
        </div>
    </div>
</div>

<!-- Warning Pop-up -->
<div class="warning_section" id="warningPopup" style="display: none;">
    <div class="card">
        <i class="bi bi-exclamation-circle-fill" style="font-size: 100px; color:#850000; text-align: center;"></i>
        <span class="wtitle">Are you sure you already checked the document?</span>
        <button class="wsubmit-btn" onclick="submitChange()">Yes</button>
        <button class="wback-btn" onclick="hideWarning()">Cancel</button>
    </div>
</div>
<script>
    document.querySelector('.status-button').addEventListener('click', function () {
        document.querySelector('.status_tag').style.display = 'block';
    });

    document.querySelector('.sdismiss').addEventListener('click', function () {
        document.querySelector('.status_tag').style.display = 'none';
    });

    document.addEventListener('DOMContentLoaded', function () {
        let currentRowId = '';

        const dropdowns = document.querySelectorAll('.status-dropdown');
        const commentButtons = document.querySelectorAll('.comment-btn');
        const popup = document.getElementById('feedbackPopup');
        const feedbackTextarea = document.getElementById('feedback');
        const sendFeedbackBtn = document.getElementById('sendFeedbackBtn');
        const closePopupBtn = document.getElementById('closePopupBtn');


        // Toggle comment button visibility based on dropdown selection
        dropdowns.forEach(function (dropdown) {
            const rowId = dropdown.getAttribute('data-row-id');
            const commentButton = document.getElementById(`comment-${rowId}`);

            // Show/hide the comment button on load
            toggleCommentButton(dropdown.value, commentButton);

            // Add event listener for change
            dropdown.addEventListener('change', function () {
                toggleCommentButton(dropdown.value, commentButton);
            });
        });

        function toggleCommentButton(status, commentButton) {
            if (status === 'Compliance') {
                commentButton.style.display = 'inline-block';
            } else {
                commentButton.style.display = 'none';
            }
        }

        // Show feedback popup when comment button is clicked
        commentButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                currentRowId = this.getAttribute('data-row-id');
                popup.style.display = 'block';
            });
        });

        // Close feedback popup when 'X' button is clicked
        closePopupBtn.addEventListener('click', function () {
            popup.style.display = 'none';
        });

        // Save feedback and update status to 'Compliance' when 'Send' is clicked
        sendFeedbackBtn.addEventListener('click', function () {
            const feedback = feedbackTextarea.value.trim();
            if (feedback !== '') {
                // Save feedback to database (use an AJAX call or form submission)
                saveFeedback(currentRowId, feedback);

                // Update the status to 'Compliance' after sending feedback
                const statusDropdown = document.querySelector(`.status-dropdown[data-row-id='${currentRowId}']`);
                statusDropdown.value = 'Compliance';

                // Clear feedback textarea
                feedbackTextarea.value = '';
                popup.style.display = 'none';
            } else {
                alert('Feedback cannot be empty.');
            }
        });

        // Function to save feedback via AJAX (for example)
        function saveFeedback(rowId, feedback) {
            // You can perform an AJAX request to save the feedback and update the file status
            $.ajax({
                url: '@Url.Action("SaveFeedback", "Chief")',
                type: 'POST',
                data: {
                    fileId: rowId,
                    fileStatus: 'Compliance',
                    fileFeedback: feedback
                },
                success: function (response) {
                    alert('Feedback saved successfully!');
                },
                error: function () {
                    alert('An error occurred while saving the feedback.');
                }
            });
        }

        initialSubmitBtn.addEventListener('click', function () {
            warningPopup.style.display = 'block';
        });

        backBtn.addEventListener('click', function () {
            warningPopup.style.display = 'none';
        });

        finalSubmitBtn.addEventListener('click', function () {

        });
    });
</script>
<script>
    let selectedRowId = null;
    let previousStatus = null;

    function handleStatusChange(selectElement) {
        const selectedStatus = selectElement.value;
        const rowId = selectElement.getAttribute("data-row-id");

        if (selectedStatus === "Compliance") {
            selectElement.value = selectedStatus;
        } else if (selectedStatus === "Checked") {
            selectedRowId = rowId;
            previousStatus = selectElement.value;
            document.getElementById("warningPopup").style.display = "block";
        } else {
            previousStatus = selectedStatus;
        }
    }

    function hideWarning() {
        document.getElementById("warningPopup").style.display = "none";
        const dropdown = document.querySelector(`select[data-row-id='${selectedRowId}']`);
        dropdown.value = previousStatus;
    }

    function submitChange() {
        document.getElementById("warningPopup").style.display = "none";
        var frId = selectedRowId;
        var selectedStatus = "Checked";

        $.ajax({
            url: '/Chief/UpdateStatus',
            type: 'POST',
            data: {
                fr_Id: frId,
                newStatus: selectedStatus
            },
            success: function (response) {
                if (response.success) {
                    alert('Status updated successfully!');
                } else if (response.assigned) {
                    alert('Evaluators assigned successfully!');
                    window.location.href = '/Chief/UEResearchApp';
                } else if (response.approved) {
                    alert('File requirements approved!');
                    window.location.href = '/Chief/UploadNTP';
                }
            },
            error: function (xhr, status, error) {
                alert('Error updating status: ' + error);
            }
        });
    }
</script>