@model IEnumerable<GAWADWinners>
@{
    Layout = "_NavChief1";
    ViewData["Title"] = "Gawad Winner Upload";
    var currentPage = ViewBag.CurrentPage as string;
}

<div class="generate-report-container">
    <div class="report-categories">
        <a href="/Chief/GenerateGAWADNominees" class="report-category submit">
            <h3>Generate GAWAD Nominees</h3>
        </a>
        <a href="/Chief/GAWADWinner" class="report-category generate">
            <h3>GAWAD Winners</h3>
        </a>
    </div>

    <hr />

    <form id="uploadFile" method="post" enctype="multipart/form-data" action="@Url.Action("UploadGAWADWinners", "Chief")">
        <div class="upload-container">
            <h5>Upload Gawad Winners Attachment</h5>
            <p><em>Note: PDF or Excel only</em></p>
            <hr />

            <div id="drop-area">
                <p>Drag & Drop your file here</p>
                <input type="file" id="fileInput" name="file" accept=".pdf,.xls,.xlsx">
            </div>

            <div class="button-group">
                <button id="previewButton" type="button" class="file-action-button">Preview File</button>
                <button id="uploadButton" type="button" class="file-action-button">Submit File</button>
            </div>
        </div>
    </form>
</div>

<!-- Archive section -->
<h2 class="archive-title">Archive:</h2>
@if(Model != null && Model.Any())
{
    <div class="archive-container">
        <table id="archiveTable" class="document-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>File Uploaded</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.gw_fileName</td>
                        <td>@ActionLog.GetTimeAgo(item.file_Uploaded)</td>
                        <td>
                            <a href="@Url.Action("PreviewFile", new {id = item.gw_Id})" style="color: #850000;">
                                <i class="bi bi-eye-fill" style="font-size: 30px;"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No Archived GAWAD Winners yet.</p>
}

@section Scripts {
    <script>
        // Drag and Drop functionality
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('fileInput');

        // Prevent default drag behaviors
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false)
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        // Highlight drop area when dragging files
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => dropArea.classList.add('highlight'), false)
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => dropArea.classList.remove('highlight'), false)
        });

        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;

            // Validate file type
            if (validateFile(files[0])) {
                fileInput.files = files;
            } else {
                alert('Invalid file type. Only PDF and Excel files are allowed.');
            }
        }

        // File validation for file type
        function validateFile(file) {
            const validTypes = ['application/pdf', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
            return validTypes.includes(file.type);
        }

        // File Preview
        document.getElementById('previewButton').addEventListener('click', () => {
            const file = fileInput.files[0];

            if (!file) {
                alert('No file selected.');
                return;
            }

            if (!validateFile(file)) {
                alert('Invalid file type. Only PDF and Excel files are allowed.');
                return;
            }

            const url = URL.createObjectURL(file);
            window.open(url, '_blank');
        });

        // File Upload
        document.getElementById('uploadButton').addEventListener('click', async () => {
            const file = fileInput.files[0];

            if (!file) {
                alert('Please select a file.');
                return;
            }

            if (!validateFile(file)) {
                alert('Invalid file type. Only PDF and Excel files are allowed.');
                return;
            }

            if (!confirm('Are you sure you want to submit this file? This cannot be undone.')) {
                return;
            }

            document.getElementById('uploadFile').submit();
        });
    </script>
}
