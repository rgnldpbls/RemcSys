@model Evaluator
@{
    ViewData["Title"] = "Evaluator Specialization";
    Layout = "_NavEvaluator1";
}

<div class="container">
        <h2>Evaluator Specialization</h2>
    @{
        var currentInterests = Model.field_of_Interest ?? new List<string>();
    }

    <!-- Display current fields of interest -->
    <div id="currentList">
        @if (currentInterests.Any())
        {
            <ul class="specialization-list">
                @foreach (var interest in currentInterests)
                {
                    <li class="specialization-item">
                        @interest
                    </li>
                }
            </ul>
        }
        else
        {
            <p>Please specify your specialization/s</p>
        }
    </div>

        <!-- Edit form with all possible fields -->
        <div id="editForm" style="display: none;">
            <ul class="specialization-list">
                @{
                    var allFields = new[]
                    {
                        "Science",
                        "Social Science",
                        "Business",
                        "Accountancy and Finance",
                        "Computer Science and Information System Technology",
                        "Education",
                        "Engineering, Architecture, Design, and Built Environment",
                        "Humanities, Language, and Communication",
                        "Public Administration, Political Science, and Law"
                    };

                    foreach (var field in allFields)
                    {
                        <li class="specialization-item">
                            <div class="checkbox-container" style="display: block;">
                                <input type="checkbox" 
                                       id="@field.Replace(" ", "")" 
                                       value="@field"
                                       @(currentInterests.Contains(field) ? "checked" : "")>
                            </div>
                            @field
                        </li>
                    }
                }
            </ul>
        </div>

        <div class="button-container">
            <button class="btn btn-edit" id="editBtn" onclick="toggleEdit()">Edit</button>
            <button class="btn btn-update" id="updateBtn" style="display: none;" onclick="updateInterests()">Update</button>
            <button class="btn btn-cancel" id="cancelBtn" style="display: none;" onclick="cancelEdit()">Cancel</button>
        </div>
    </div>

<script>
    function toggleEdit() {
        document.getElementById('currentList').style.display = 'none';
        document.getElementById('editForm').style.display = 'block';
        document.getElementById('editBtn').style.display = 'none';
        document.getElementById('updateBtn').style.display = 'inline-block';
        document.getElementById('cancelBtn').style.display = 'inline-block';
    }

    function cancelEdit() {
        document.getElementById('currentList').style.display = 'block';
        document.getElementById('editForm').style.display = 'none';
        document.getElementById('editBtn').style.display = 'inline-block';
        document.getElementById('updateBtn').style.display = 'none';
        document.getElementById('cancelBtn').style.display = 'none';
    }

    function updateInterests() {
        const checkboxes = document.querySelectorAll('#editForm input[type="checkbox"]');
        const selectedInterests = [];

        checkboxes.forEach((checkbox) => {
            if (checkbox.checked) {
                selectedInterests.push(checkbox.value);
            }
        });

        // Create form data to send to controller
        const formData = new FormData();
        selectedInterests.forEach(interest => {
            formData.append('field_of_Interest', interest);
        });

        // Send to your controller
        fetch('/Evaluator/UpdateSpecialization', {  // Replace with your actual controller route
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error updating interests');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating interests');
            });
    }
</script>

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
        background-color: #fff;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    h2 {
        color: #333;
        margin-bottom: 30px;
        text-align: center;
    }

    .specialization-list {
        list-style: none;
        padding: 0;
    }

    .specialization-item {
        padding: 12px 15px;
        margin-bottom: 8px;
        background-color: #f8f9fa;
        border-radius: 4px;
        display: flex;
        align-items: center;
    }

        .specialization-item.hidden {
            display: none;
        }

    .checkbox-container {
        display: none;
        margin-right: 15px;
    }

        .checkbox-container input[type="checkbox"] {
            width: 18px;
            height: 18px;
            cursor: pointer;
        }

    .button-container {
        margin-top: 20px;
        text-align: center;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        margin: 0 5px;
        transition: background-color 0.3s;
    }

    .btn-edit {
        background-color: #007bff;
        color: white;
    }

        .btn-edit:hover {
            background-color: #0056b3;
        }

    .btn-update {
        background-color: #28a745;
        color: white;
        display: none;
    }

        .btn-update:hover {
            background-color: #218838;
        }

    .btn-cancel {
        background-color: #dc3545;
        color: white;
        display: none;
    }

        .btn-cancel:hover {
            background-color: #c82333;
        }
</style>