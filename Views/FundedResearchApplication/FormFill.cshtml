@model RemcSys.Models.FormModel
@{
    ViewData["Title"] = "General Information";
    Layout = "_NavTeamLeader";
}

<div class="container">
    <div class="card bg-danger text-black p-4" style="border-radius: 20px;">
        <h4 class="text-center font-weight-bold" style="color: #850000;">General Information</h4>

        <hr />

        <form asp-action="FormFill" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ResearchType">Funded Research Type:</label>
                <div class="dropdown-container">
                    <select asp-for="ResearchType" class="form-control custom-select">
                        @if (ViewBag.Type == "University Funded Research")
                        {
                            <option value="University Funded Research" selected>University Funded Research</option>
                            <option value="Externally Funded Research">Externally Funded Research</option>
                            <option value="University Funded Research Load">University Funded Research Load</option>
                        }
                        else if (ViewBag.Type == "Externally Funded Research")
                        {
                            <option value="Externally Funded Research" selected>Externally Funded Research</option>
                            <option value="University Funded Research">University Funded Research</option>
                            <option value="University Funded Research Load">University Funded Research Load</option>
                        }
                        else if (ViewBag.Type == "University Funded Research Load")
                        {
                            <option value="University Funded Research Load" selected>University Funded Research Load</option>
                            <option value="University Funded Research">University Funded Research</option>
                            <option value="Externally Funded Research">Externally Funded Research</option>
                        }
                    </select>
                    <i class="arrow-down"></i>
                    <span asp-validation-for="ResearchType" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ProjectTitle">Program/Project Title:</label>
                <input asp-for="ProjectTitle" type="text" class="form-control" placeholder="Research Title..." />
                <span asp-validation-for="ProjectTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectLeader">Program/Project Proponent: </label>
                <input asp-for="ProjectLeader" type="text" class="form-control" placeholder="Project Leader..." value="@ViewBag.Name" />
                <span asp-validation-for="ProjectLeader" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectMembers">Program/Project Co-Proponent's and Research Assistants: [Type N/A if Not Applicable]</label>
                @Html.TextAreaFor(m => m.ProjectMembers, new { @class = "form-control", @placeholder = "Project Member1...\nProject Member2...\nProject Member3...", @rows = "3" })
                <span asp-validation-for="ProjectMembers" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImplementingInstitution">Implementing Institution:</label>
                @Html.TextAreaFor(m => m.ImplementingInstitution, new { @class = "form-control", @placeholder = "Implementing Institution...", @rows = "3" })
                <span asp-validation-for="ImplementingInstitution" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CollaboratingInstitution">Collaborating Institution:</label>
                @Html.TextAreaFor(m => m.CollaboratingInstitution, new { @class = "form-control", @placeholder = "Collaborating Institution...", @rows = "3" })
                <span asp-validation-for="CollaboratingInstitution" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectDuration">Project Duration: [in months]</label>
                <div class="input-group">
                    <input asp-for="ProjectDuration" type="number" class="form-control" placeholder="Project Duration..." max="36" />
                    <span class="input-group-text">month/s</span>
                </div>
                <span asp-validation-for="ProjectDuration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalProjectCost">Total Project Cost:</label>
                <div class="input-group">
                    <span class="input-group-text">₱</span>
                    <input asp-for="TotalProjectCost" type="text" class="form-control" id="totalProjectCost" placeholder="Total Project Cost..." oninput="formatCurrency(this)" />
                </div>
                <span asp-validation-for="TotalProjectCost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Objectives">Objectives:</label>
                @Html.TextAreaFor(m => m.Objectives, new { @class = "form-control", @placeholder = "Objectives...", @rows = "5" })
                <span asp-validation-for="Objectives" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Scope">Scope:</label>
                @Html.TextAreaFor(m => m.Scope, new { @class = "form-control", @placeholder = "Scope...", @rows = "5" })
                <span asp-validation-for="Scope" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Methodology">Methodology:</label>
                @Html.TextAreaFor(m => m.Methodology, new { @class = "form-control", @placeholder = "Methodology...", @rows = "5" })
                <span asp-validation-for="Methodology" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudyField">Field of the Study:</label>
                <div class="dropdown-container">
                    <select asp-for="StudyField" class="form-control custom-select">
                        <option value="" disabled selected>Select Field of Study...</option>
                        <option value="Science">Science</option>
                        <option value="Social Science">Social Science</option>
                        <option value="Business">Business</option>
                        <option value="Accountancy and Finance">Accountancy and Finance</option>
                        <option value="Computer Science and Information System Technology">Computer Science and Information System Technology</option>
                        <option value="Education">Education</option>
                        <option value="Engineering, Architecture, Design, and Built Environment">Engineering, Architecture, Design, and Built Environment</option>
                        <option value="Humanities, Language, and Communication">Humanities, Language, and Communication</option>
                        <option value="Public Administration, Political Science, and Law">Public Administration, Political Science, and Law</option>
                    </select>
                    <i class="arrow-down"></i>
                    <span asp-validation-for="StudyField" class="text-danger"></span>
                </div>
            </div>
            <div class="text-center text-white mt-4">
                <input type="submit" class="btn btn-danger font-weight-bold px-4" value="Generate Documents" style="border-radius: 5px; padding:10px;" />
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    function formatCurrency(input) {
        // Remove any non-digit characters (except for commas)
        let value = input.value.replace(/,/g, '');

        // Check if input is a number
        if (!isNaN(value) && value) {
            // Convert the number to a string with commas as thousand separators
            input.value = parseInt(value).toLocaleString('en-US');
        } else {
            input.value = ''; // If input is invalid, clear it
        }
    }
</script>