@model List<FundedResearchApplication>
@{
    if (Model != null && Model.Any())
    {
        ViewBag.Type = Model.First().fra_Type;
        ViewBag.Status = Model.First().application_Status;
        @if(Model.First().FundedResearch != null)
        {
            ViewBag.IsFunded = true;
        }
        else
        {
            ViewBag.IsFunded = false;
        }
        Layout = "_NavTeamLeader2";
    }
    else
    {
        Layout = "_NavTeamLeader";
    }
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- FullCalendar and Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />

</head>

<div class="dashboard-teamleader">
    <div class="welcome-section">
        <h1>DASHBOARD</h1>
    </div>
    <div class="container">
        <!-- Calendar -->
        <div id="calendar"></div>

        <!-- Add Event Modal -->
        <div class="modal fade" id="addEventModal" tabindex="-1" aria-labelledby="addEventModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addEventModalLabel">Add New Event</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="eventForm">
                            <div class="mb-3">
                                <label for="event-title" class="form-label">Event Title</label>
                                <input type="text" class="form-control" id="event-title" required>
                            </div>
                            <div class="mb-3">
                                <label for="event-start" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="event-start" required>
                            </div>
                            <div class="mb-3">
                                <label for="event-end" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="event-end">
                            </div>
                            <button type="submit" class="btn btn-primary">Add Event</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="upcoming-deadlines">
            <h2>Upcoming Deadline</h2>
            <div class="deadline">
                <p><b>Submit:</b> Progress Report 1</p>
                <span class="due-date">08/20 DUE</span>
            </div>
           @*  <div class="deadline">
            </div>
            <div class="deadline">
            </div>
            <div class="deadline">
            </div>
            <div class="deadline">
            </div> *@
        </div>
    </div>
    @* <div class="attachments-section">
    <h2>Recent Files</h2>
    <hr />
    <div class="attachments-container">
            <div class="attachment-card">
                <div class="attachment-image">
                    <img src="#" alt="Document Image Preview">
                </div>
                <div class="attachment-info">
                    <p><strong>Document Title:</strong> Capsule Research Proposal</p>
                    <p><strong>Status:</strong> Approved</p>
                </div>
            </div>
            <div class="attachment-card">
                <div class="attachment-image">
                    <img src="#" alt="Document Image Preview">
                </div>
                <div class="attachment-info">
                    <p><strong>Document Title:</strong> Form 1: Term-of-Reference</p>
                    <p><strong>Status:</strong> Approved</p>
                </div>
            </div>
            <div class="attachment-card">
                <div class="attachment-image">
                    <img src="#" alt="Document Image Preview">
                </div>
                <div class="attachment-info">
                    <p><strong>Document Title:</strong> Form 2: Line-Item-Budget</p>
                    <p><strong>Status:</strong> Approved</p>
                </div>
            </div>
            <div class="attachment-card">
                <div class="attachment-image">
                    <img src="#" alt="Document Image Preview">
                </div>
                <div class="attachment-info">
                    <p><strong>Document Title:</strong> Form 3: Schedule-of-Outputs</p>
                    <p><strong>Status:</strong> Approved</p>
                </div>
            </div>
            <div class="attachment-card">
                <div class="attachment-image">
                    <img src="#" alt="Document Image Preview">
                </div>
                <div class="attachment-info">
                    <p><strong>Document Title:</strong> Form 4: Workplan</p>
                    <p><strong>Status:</strong> Approved</p>
                </div>
            </div>
    </div>
</div> *@
</div>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('calendar');
        const addEventModal = new bootstrap.Modal(document.getElementById('addEventModal'));
        const eventForm = document.getElementById('eventForm');

        // Get stored events from localStorage or initialize
        let storedEvents = JSON.parse(localStorage.getItem('events')) || [];

        // Function to remove underlines and style the day colors
        const removeUnderlines = () => {
            document.querySelectorAll('#calendar a').forEach(el => {
                el.style.textDecoration = 'none';
                el.style.color = 'black';
            });
        };

        // Function to delete an event by its ID
        const deleteEvent = (eventId) => {
            storedEvents = storedEvents.filter(event => event.id !== eventId);
            localStorage.setItem('events', JSON.stringify(storedEvents));

            // Remove the event from the calendar
            const eventToRemove = calendar.getEventById(eventId);
            if (eventToRemove) {
                eventToRemove.remove();
            }
        };

        // Initialize FullCalendar
        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            customButtons: {
                addEventButton: {
                    text: 'Add Event',
                    click: function () {
                        // Show modal to add event
                        addEventModal.show();
                    }
                }
            },
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'addEventButton dayGridMonth,timeGridWeek,timeGridDay'
            },
            events: storedEvents, // Load events from localStorage
            editable: true,
            droppable: true,
            datesSet: removeUnderlines, // Remove underlines after rendering
            eventContent: function (arg) {
                // Remove underline and create delete button with the event title
                const deleteButton = `<button class="delete-event-btn" data-id="${arg.event.id}" style="background-color:#850000; color: #fff; border:none; cursor:pointer;">x</button>`;
                const eventHtml = `<div style="background-color:#FFDB89; display: flex; justify-content: space-between; align-items: center; color: black; border: 2px solid #ff943d;">
                                            <span>${arg.event.title}</span> ${deleteButton}
                                           </div>`;

                return { html: eventHtml };
            },
            eventDidMount: function (info) {
                // Add event listener to the delete button
                const deleteButton = info.el.querySelector('.delete-event-btn');
                if (deleteButton) {
                    deleteButton.addEventListener('click', function (e) {
                        const eventId = deleteButton.getAttribute('data-id');
                        deleteEvent(eventId);
                    });
                }
            }
        });

        // Render calendar
        calendar.render();

        // Handle event form submission
        eventForm.addEventListener('submit', function (e) {
            e.preventDefault();

            // Get form input values
            const title = document.getElementById('event-title').value;
            const startDate = document.getElementById('event-start').value;
            const endDate = document.getElementById('event-end').value || startDate; // Use startDate if endDate is empty

            // Create new event object
            const newEvent = {
                id: Date.now().toString(),
                title: title,
                start: startDate,
                end: endDate
            };

            // Add event to calendar
            calendar.addEvent(newEvent);

            // Save event to localStorage
            storedEvents.push(newEvent);
            localStorage.setItem('events', JSON.stringify(storedEvents));

            // Close modal and reset form
            addEventModal.hide();
            eventForm.reset();

            // Re-apply underline removal after new event is added
            removeUnderlines();
        });

        // Initial underline removal after calendar renders
        removeUnderlines();

        // Style the buttons
        document.querySelectorAll('.fc-button').forEach(button => {
            button.style.backgroundColor = '#850000';
            button.style.color = '#fff';
            button.style.border = 'none';
        });

        // Style the month title
        document.querySelectorAll('.fc-toolbar-title').forEach(title => {
            title.style.color = '#000'; // Month title color
        });

        // Style the day numbers (inside the day grid)
        document.querySelectorAll('.fc-daygrid-day-number').forEach(dayNumber => {
            dayNumber.style.color = 'black'; // Day numbers color
        });
    });
</script>
